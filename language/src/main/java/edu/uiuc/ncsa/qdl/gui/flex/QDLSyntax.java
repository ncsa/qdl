/* The following code was generated by JFlex 1.4.1 on 5/23/24, 5:14 PM */

/*
 * Generated on 5/23/24, 5:14 PM
 */
package edu.uiuc.ncsa.qdl.gui.flex;

import java.io.*;
import javax.swing.text.Segment;

import org.fife.ui.rsyntaxtextarea.*;


/**
 * QDL
TokenMaker class generated by TokenMakerMaker utility 08/09/2022
By Jeff Gaynor
 */

public class QDLSyntax extends AbstractJFlexCTokenMaker {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int EOL_COMMENT = 2;
  public static final int YYINITIAL = 0;
  public static final int MLC = 1;

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\20\1\10\1\0\1\20\1\16\22\0\1\20\1\72\1\15"+
    "\1\17\1\1\1\41\1\37\1\7\2\40\1\22\1\25\1\35\1\25"+
    "\1\23\1\21\1\4\3\4\4\6\2\3\1\45\1\35\1\74\1\73"+
    "\1\74\1\35\1\17\1\5\1\55\1\5\1\56\2\5\2\1\1\57"+
    "\2\1\1\61\1\1\1\62\4\1\1\63\7\1\1\75\1\11\1\36"+
    "\1\77\1\2\1\0\1\31\1\14\1\50\1\52\1\24\1\30\1\60"+
    "\1\42\1\44\1\66\1\51\1\32\1\54\1\13\1\47\1\43\1\70"+
    "\1\27\1\33\1\26\1\12\1\67\1\46\1\64\1\53\1\65\1\34"+
    "\1\76\1\34\1\41\55\0\1\100\2\0\1\100\17\0\1\100\27\0"+
    "\1\100\37\0\1\100\u02c8\0\1\71\u1cb9\0\1\100\u0117\0\1\100\77\0"+
    "\1\100\55\0\1\100\2\0\1\100\1\100\1\0\1\100\1\0\1\100"+
    "\1\100\1\0\1\100\1\100\32\0\1\100\1\100\1\100\1\100\35\0"+
    "\1\100\13\0\1\100\1\100\12\0\1\100\1\100\2\0\1\100\1\100"+
    "\57\0\1\71\1\0\1\100\1\0\1\71\10\0\1\100\5\0\1\100"+
    "\135\0\1\71\1\0\1\100\1\0\1\100\157\0\1\100\u046b\0\1\100"+
    "\1\100\u01c8\0\1\71\ud64f\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\3\0\2\1\1\2\1\3\1\4\1\5\1\1\1\6"+
    "\1\1\1\7\1\10\1\5\10\1\1\11\3\1\1\6"+
    "\21\1\1\6\1\1\1\5\1\11\1\1\1\12\1\13"+
    "\5\12\1\14\3\12\1\0\1\15\1\0\1\15\1\3"+
    "\1\16\1\0\1\3\7\1\2\7\1\17\1\20\1\21"+
    "\1\22\24\1\1\6\20\1\1\6\1\1\1\23\20\1"+
    "\1\23\20\1\1\24\11\0\1\22\1\0\1\3\1\25"+
    "\2\3\1\16\1\3\10\1\1\7\1\26\1\7\3\1"+
    "\1\6\3\1\1\6\31\1\1\6\41\1\1\6\5\1"+
    "\1\27\7\1\11\0\1\3\4\1\1\7\4\1\1\30"+
    "\30\1\1\6\4\1\1\6\32\1\1\6\12\1\2\0"+
    "\1\31\2\0\1\32\1\0\1\3\1\1\1\7\72\1"+
    "\5\0\1\3\1\1\1\7\6\1\2\6\15\1\1\6"+
    "\15\1\1\23\17\1\1\6\42\1";

  private static int [] zzUnpackAction() {
    int [] result = new int[514];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\101\0\202\0\303\0\u0104\0\u0145\0\u0186\0\303"+
    "\0\303\0\u01c7\0\u0208\0\u0249\0\u028a\0\u02cb\0\u030c\0\u034d"+
    "\0\u038e\0\u03cf\0\u0410\0\u0451\0\u0492\0\u04d3\0\u0514\0\303"+
    "\0\u0555\0\u0596\0\u05d7\0\u0618\0\u0659\0\u069a\0\u06db\0\u071c"+
    "\0\u075d\0\u079e\0\u07df\0\u0820\0\u0861\0\u08a2\0\u08e3\0\u0924"+
    "\0\u0965\0\u09a6\0\u09e7\0\u0a28\0\u0a69\0\303\0\u0aaa\0\u0659"+
    "\0\u0aeb\0\u0b2c\0\u0b6d\0\303\0\u0bae\0\u0bef\0\u0c30\0\u0c71"+
    "\0\u0cb2\0\303\0\u0cf3\0\u0d34\0\u0d75\0\u0db6\0\u0df7\0\u034d"+
    "\0\u0e38\0\u0e79\0\303\0\u0eba\0\u0efb\0\u0f3c\0\u0f7d\0\u0fbe"+
    "\0\u0fff\0\u1040\0\u1081\0\u10c2\0\u1103\0\u1144\0\303\0\303"+
    "\0\303\0\u1185\0\u11c6\0\u1207\0\u1248\0\u1289\0\u12ca\0\u130b"+
    "\0\u134c\0\u138d\0\u13ce\0\u140f\0\u1450\0\u1491\0\u14d2\0\u1513"+
    "\0\u1554\0\u1595\0\u15d6\0\u1617\0\u1658\0\u1699\0\u0104\0\u16da"+
    "\0\u171b\0\u175c\0\u179d\0\u17de\0\u181f\0\u1860\0\u18a1\0\u18e2"+
    "\0\u1923\0\u1964\0\u19a5\0\u19e6\0\u1a27\0\u1a68\0\u1aa9\0\u1aea"+
    "\0\u1b2b\0\u0104\0\u1b6c\0\u1bad\0\u1bee\0\u1c2f\0\u1c70\0\u1cb1"+
    "\0\u1cf2\0\u1d33\0\u1d74\0\u1db5\0\u1df6\0\u1e37\0\u1e78\0\u1eb9"+
    "\0\u1efa\0\u1f3b\0\u1f7c\0\u1fbd\0\u1ffe\0\u203f\0\u2080\0\u20c1"+
    "\0\u2102\0\u2143\0\u2184\0\u21c5\0\u2206\0\u2247\0\u2288\0\u22c9"+
    "\0\u230a\0\u234b\0\u238c\0\303\0\u23cd\0\u240e\0\u244f\0\u2490"+
    "\0\u24d1\0\u2512\0\u2553\0\u2594\0\u25d5\0\u2616\0\u2657\0\u2698"+
    "\0\303\0\u26d9\0\u271a\0\u0eba\0\u275b\0\u279c\0\u27dd\0\u281e"+
    "\0\u285f\0\u28a0\0\u28e1\0\u2922\0\u2963\0\u29a4\0\303\0\u29e5"+
    "\0\u2a26\0\u2a67\0\u2aa8\0\u2ae9\0\u2b2a\0\u2b6b\0\u2bac\0\u2bed"+
    "\0\u2c2e\0\u2c6f\0\u2cb0\0\u2cf1\0\u2d32\0\u2d73\0\u2db4\0\u2df5"+
    "\0\u2e36\0\u2e77\0\u2eb8\0\u2ef9\0\u1f7c\0\u2f3a\0\u2f7b\0\u2fbc"+
    "\0\u2ffd\0\u303e\0\u307f\0\u30c0\0\u3101\0\u3142\0\u3183\0\u31c4"+
    "\0\u3205\0\u3246\0\u3287\0\u32c8\0\u3309\0\u334a\0\u338b\0\u33cc"+
    "\0\u340d\0\u344e\0\u348f\0\u34d0\0\u3511\0\u3552\0\u3593\0\u35d4"+
    "\0\u3615\0\u3656\0\u3697\0\u36d8\0\u3719\0\u375a\0\u379b\0\u37dc"+
    "\0\u381d\0\u385e\0\u389f\0\u38e0\0\u3921\0\u3962\0\u39a3\0\u39e4"+
    "\0\u3a25\0\u3a66\0\u3aa7\0\u3ae8\0\u3b29\0\u3b6a\0\u3bab\0\u3bec"+
    "\0\u3c2d\0\u0104\0\u3c6e\0\u3caf\0\u3cf0\0\u3d31\0\u3d72\0\u3db3"+
    "\0\u3df4\0\u3e35\0\u3e76\0\u3eb7\0\u3ef8\0\u3f39\0\u3f7a\0\u3fbb"+
    "\0\u3ffc\0\u403d\0\u407e\0\u40bf\0\u4100\0\u4141\0\u4182\0\u41c3"+
    "\0\u4204\0\u4245\0\u4286\0\u42c7\0\u0104\0\u4308\0\u4349\0\u438a"+
    "\0\u43cb\0\u440c\0\u444d\0\u448e\0\u44cf\0\u4510\0\u4551\0\u4592"+
    "\0\u45d3\0\u4614\0\u4655\0\u4696\0\u46d7\0\u4718\0\u4759\0\u479a"+
    "\0\u47db\0\u481c\0\u485d\0\u489e\0\u48df\0\u4920\0\u4961\0\u49a2"+
    "\0\u49e3\0\u4a24\0\u4a65\0\u4aa6\0\u4ae7\0\u4b28\0\u4b69\0\u4baa"+
    "\0\u4beb\0\u4c2c\0\u4c6d\0\u4cae\0\u4cef\0\u4d30\0\u4d71\0\u4db2"+
    "\0\u4df3\0\u4e34\0\u4e75\0\u4eb6\0\u4ef7\0\u4f38\0\u4f79\0\u4fba"+
    "\0\u4ffb\0\u503c\0\u507d\0\u50be\0\u50ff\0\u5140\0\u5181\0\u51c2"+
    "\0\u5203\0\u5244\0\u5285\0\u52c6\0\u5307\0\u5348\0\u5389\0\u53ca"+
    "\0\u540b\0\u544c\0\u548d\0\u54ce\0\u550f\0\u5550\0\u5591\0\u55d2"+
    "\0\u5613\0\u5654\0\u5695\0\u56d6\0\u5717\0\u5758\0\u5799\0\u57da"+
    "\0\u581b\0\u585c\0\u589d\0\u58de\0\u591f\0\u5960\0\u59a1\0\u59e2"+
    "\0\u5a23\0\u5a64\0\u5aa5\0\u5ae6\0\u5b27\0\u5b68\0\u5ba9\0\u5bea"+
    "\0\u5c2b\0\u5c6c\0\u5cad\0\u5cee\0\u5d2f\0\u5d70\0\u5db1\0\u5df2"+
    "\0\u5e33\0\u5e74\0\u5eb5\0\u5ef6\0\u5f37\0\u5f78\0\u5fb9\0\u5ffa"+
    "\0\u603b\0\u607c\0\u60bd\0\u60fe\0\u613f\0\u6180\0\u61c1\0\u6202"+
    "\0\u6243\0\u6284\0\u62c5\0\u6306\0\u6347\0\u6388\0\u63c9\0\u640a"+
    "\0\u644b\0\u648c\0\u64cd\0\u650e\0\u654f\0\u548d\0\u6590\0\u5550"+
    "\0\u65d1\0\u6612\0\u6653\0\u6694\0\u66d5\0\u6716\0\u6757\0\u6798"+
    "\0\u67d9\0\u681a\0\u685b\0\u689c\0\u68dd\0\u691e\0\u695f\0\u69a0"+
    "\0\u69e1\0\u6a22\0\u6a63\0\u6aa4\0\u6ae5\0\u6b26\0\u6b67\0\u6ba8"+
    "\0\u6be9\0\u6c2a\0\u6c6b\0\u6cac\0\u6ced\0\u6d2e\0\u6d6f\0\u6db0"+
    "\0\u6df1\0\u6e32\0\u6e73\0\u6eb4\0\u685b\0\u6ef5\0\u6c2a\0\u6f36"+
    "\0\u6f77\0\u6fb8\0\u6ff9\0\u703a\0\u707b\0\u70bc\0\u70fd\0\u713e"+
    "\0\u717f\0\u2bed\0\u71c0\0\u7201\0\u7242\0\u7283\0\u72c4\0\u1595"+
    "\0\u7305\0\u7346\0\u7387\0\u73c8\0\u7409\0\u744a\0\u748b\0\u74cc"+
    "\0\u750d\0\u754e\0\u758f\0\u75d0\0\u7611\0\u7652\0\u7693\0\u76d4"+
    "\0\u7715\0\u7756\0\u7797\0\u77d8\0\u4920\0\u7819\0\u785a\0\u789b"+
    "\0\u78dc\0\u791d\0\u795e\0\u799f\0\u79e0\0\u7a21\0\u7a62\0\u7aa3"+
    "\0\u7ae4\0\u7b25";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[514];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\4\2\5\2\6\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\4\1\11\1\16\1\17"+
    "\1\11\1\20\1\21\1\11\1\22\1\23\1\24\1\25"+
    "\1\26\1\27\1\30\1\4\1\30\1\31\1\30\1\11"+
    "\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\5\1\43\1\44\1\45\1\46\1\47\1\50"+
    "\1\51\1\52\2\5\1\53\1\54\1\55\1\56\1\35"+
    "\1\57\1\60\1\61\1\62\1\4\1\11\10\63\1\64"+
    "\11\63\1\65\5\63\1\66\11\63\1\67\3\63\1\70"+
    "\32\63\10\71\1\72\17\71\1\73\11\71\1\74\3\71"+
    "\1\75\32\71\102\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\23\5\10\0"+
    "\3\77\2\6\1\77\1\6\2\0\4\77\2\0\1\77"+
    "\3\0\1\100\1\101\1\0\6\77\6\0\3\77\1\0"+
    "\24\77\6\0\1\77\7\102\1\103\1\104\1\105\67\102"+
    "\1\0\6\5\2\0\1\76\1\5\1\106\1\5\7\0"+
    "\1\5\1\0\5\5\1\107\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\1\110\2\5\7\0\1\5"+
    "\1\0\1\5\1\111\4\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\1\5\1\112\2\5\1\113\1\5\6\0\3\5\1\0"+
    "\1\5\1\114\21\5\10\0\10\15\1\115\1\116\3\15"+
    "\1\117\63\15\20\0\1\16\71\0\1\11\7\0\1\120"+
    "\1\121\61\0\2\122\1\0\1\122\73\0\6\5\2\0"+
    "\1\76\1\5\1\123\1\5\7\0\1\5\1\0\4\5"+
    "\1\124\1\5\6\0\3\5\1\0\16\5\1\125\4\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\1\5\1\126\1\5\1\127\2\5\6\0\1\130\2\5"+
    "\1\0\1\5\1\131\21\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\132\1\0\3\5\1\133\2\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\1\134"+
    "\2\5\7\0\1\5\1\0\1\5\1\135\1\5\1\136"+
    "\1\137\1\5\6\0\2\5\1\140\1\0\1\5\1\141"+
    "\21\5\11\0\6\5\2\0\1\76\2\5\1\142\7\0"+
    "\1\5\1\0\1\143\1\144\3\5\1\145\6\0\3\5"+
    "\1\0\2\5\1\146\20\5\11\0\6\5\2\0\1\76"+
    "\1\5\1\147\1\5\7\0\1\5\1\0\6\5\6\0"+
    "\2\5\1\150\1\0\1\5\1\151\1\152\20\5\11\0"+
    "\6\5\2\0\1\76\1\153\2\5\7\0\1\154\1\0"+
    "\1\155\2\5\1\156\1\157\1\5\6\0\1\160\1\5"+
    "\1\161\1\0\1\162\1\163\1\164\20\5\47\0\1\11"+
    "\42\0\6\5\2\0\1\76\3\5\7\0\1\165\1\0"+
    "\3\5\1\166\2\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\1\5"+
    "\1\167\4\5\6\0\2\5\1\170\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\1\5\1\171\1\5\7\0\1\5"+
    "\1\0\2\5\1\172\2\5\1\173\6\0\3\5\1\0"+
    "\4\5\1\174\1\5\1\175\14\5\103\0\1\11\6\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\5\5"+
    "\1\176\6\0\1\177\2\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\5\5\1\200"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\2\5\1\201\7\0\1\202\1\0\3\5\1\203\2\5"+
    "\6\0\1\204\2\5\1\0\1\5\1\205\21\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\206\1\0\6\5"+
    "\6\0\2\5\1\207\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\210\1\0\3\5\1\211\2\5"+
    "\6\0\2\5\1\212\1\0\1\5\1\213\21\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\3\5"+
    "\1\214\2\5\6\0\2\5\1\215\1\0\1\5\1\216"+
    "\21\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\1\5\1\217\21\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\220\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\1\5\1\221\1\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\2\5\1\222\20\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\2\5\1\223\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\1\224\2\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\225\1\0\1\226"+
    "\5\5\6\0\3\5\1\0\23\5\11\0\1\5\1\227"+
    "\4\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\1\5\1\230\21\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\2\5\1\231"+
    "\1\232\2\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\1\233\2\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\55\0\1\11\131\0\1\11"+
    "\40\0\1\11\37\0\2\11\1\0\10\63\1\0\11\63"+
    "\1\0\5\63\1\0\11\63\1\0\3\63\1\0\32\63"+
    "\21\0\1\234\105\0\1\235\15\0\1\236\62\0\1\237"+
    "\120\0\1\240\32\0\10\71\1\0\17\71\1\0\11\71"+
    "\1\0\3\71\1\0\32\71\26\0\1\241\15\0\1\242"+
    "\62\0\1\243\120\0\1\244\44\0\1\245\66\0\7\77"+
    "\2\0\4\77\2\0\1\77\4\0\1\77\1\0\6\77"+
    "\6\0\3\77\1\0\24\77\6\0\4\77\2\246\1\77"+
    "\1\246\2\0\4\77\2\0\1\77\4\0\1\77\1\247"+
    "\6\77\6\0\3\77\1\0\24\77\6\0\1\77\7\250"+
    "\1\251\1\0\70\250\7\0\1\251\71\0\4\250\1\252"+
    "\1\250\1\253\1\254\1\0\1\102\1\255\3\102\10\250"+
    "\3\102\50\250\1\0\6\5\2\0\1\76\2\5\1\256"+
    "\7\0\1\5\1\0\4\5\1\257\1\5\6\0\2\5"+
    "\1\260\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\147\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\6\5\1\261\14\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\1\5\1\262\21\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\263\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\1\5"+
    "\1\264\21\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\4\5\1\265"+
    "\11\5\1\147\4\5\10\0\11\115\1\266\3\115\1\267"+
    "\67\115\1\15\1\115\2\15\1\0\1\15\1\270\3\15"+
    "\10\115\3\15\50\115\3\77\2\122\1\77\1\122\2\0"+
    "\4\77\2\0\1\77\4\0\1\101\1\0\6\77\6\0"+
    "\3\77\1\0\24\77\6\0\1\77\1\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\2\5\1\271\20\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\5\5\1\272\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\273\1\0\6\5\6\0\1\5\1\274\1\5\1\0"+
    "\2\5\1\275\20\5\11\0\6\5\2\0\1\76\1\276"+
    "\2\5\7\0\1\5\1\0\3\5\1\277\2\5\6\0"+
    "\2\5\1\152\1\0\5\5\1\172\15\5\11\0\6\5"+
    "\2\0\1\76\1\5\1\300\1\5\7\0\1\5\1\0"+
    "\6\5\6\0\2\5\1\301\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\302\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\1\5\1\303\4\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\3\5\1\304\17\5\11\0\6\5\2\0\1\76"+
    "\1\5\1\305\1\5\7\0\1\5\1\0\1\306\5\5"+
    "\6\0\1\5\1\307\1\5\1\0\4\5\1\310\1\5"+
    "\1\311\12\5\1\312\1\5\11\0\6\5\2\0\1\76"+
    "\1\5\1\313\1\5\7\0\1\5\1\0\6\5\6\0"+
    "\2\5\1\314\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\1\5\1\315\1\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\1\5"+
    "\1\316\21\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\4\5\1\317\1\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\1\5\1\320\21\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\4\5\1\321\1\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\1\5"+
    "\1\322\4\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\5\5\1\147"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\3\5\1\323\2\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\12\5"+
    "\1\142\10\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\5\5\1\324\6\0\2\5\1\323\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\1\5\1\325\21\5"+
    "\11\0\6\5\2\0\1\76\2\5\1\326\7\0\1\5"+
    "\1\0\5\5\1\327\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\3\5"+
    "\1\330\2\5\6\0\3\5\1\0\2\5\1\331\7\5"+
    "\1\332\10\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\6\5\1\147"+
    "\14\5\11\0\6\5\2\0\1\76\2\5\1\333\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\1\334"+
    "\5\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\3\5\1\335\2\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\5\5\1\147\15\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\336\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\1\337\2\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\1\5\1\300\1\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\17\5\1\107\3\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\2\5\1\203\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\1\5\1\340\4\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\1\5\1\341\1\5\1\215"+
    "\2\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\3\5\1\222\2\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\4\5\1\340\1\342\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\2\5\1\343\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\2\5\1\344\20\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\2\5\1\345\2\5\1\346\6\0\1\5\1\347\1\5"+
    "\1\0\2\5\1\350\1\5\1\351\16\5\11\0\1\5"+
    "\1\352\4\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\353\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\1\5\1\354\1\5\1\0"+
    "\23\5\11\0\1\5\1\355\4\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\2\5\1\356\1\0\23\5\11\0\1\5"+
    "\1\357\4\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\1\5\1\360"+
    "\4\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\2\5\1\361"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\1\362\5\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\363\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\1\5\1\364\1\5\7\0\1\5\1\0\5\5"+
    "\1\300\6\0\3\5\1\0\6\5\1\365\14\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\5\5\1\142\15\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\4\5\1\301"+
    "\1\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\2\5\1\366\7\0\1\5\1\0\1\367\1\5"+
    "\1\370\3\5\6\0\3\5\1\0\2\5\1\271\20\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\1\371\5\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\1\5\1\147"+
    "\1\372\2\5\1\373\6\0\3\5\1\0\6\5\1\147"+
    "\14\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\2\5\1\142\20\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\5\5\1\344\6\0\3\5\1\0\16\5\1\147\4\5"+
    "\11\0\6\5\2\0\1\76\1\5\1\147\1\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\4\5\1\374\16\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\1\5\1\375\21\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\2\5\1\376\20\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\1\377\5\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\4\5\1\147"+
    "\16\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\5\5\1\225\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\4\5"+
    "\1\u0100\1\5\6\0\3\5\1\0\6\5\1\u0101\14\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\1\u0102\5\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\u0103\1\0\1\5\1\u0104"+
    "\4\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\1\u0105\2\5\7\0\1\5\1\0\4\5\1\257"+
    "\1\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\2\5"+
    "\1\215\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\5\5\1\u0106\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\1\5\1\u0107\2\5\1\u0108\1\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\u0109\1\0\6\5\6\0\3\5\1\0\23\5\53\0"+
    "\1\u010a\67\0\1\u010b\74\0\1\u010c\120\0\1\u010d\75\0"+
    "\1\u010e\67\0\1\u010f\74\0\1\u0110\120\0\1\u0111\35\0"+
    "\4\u0112\5\0\1\u0112\7\0\1\u0112\3\0\2\u0112\16\0"+
    "\1\u0112\1\0\1\u0112\2\0\2\u0112\22\0\3\77\2\246"+
    "\1\77\1\246\2\0\4\77\2\0\1\77\4\0\1\77"+
    "\1\0\6\77\6\0\3\77\1\0\24\77\6\0\1\77"+
    "\3\0\2\246\1\0\1\246\72\0\7\250\1\103\1\0"+
    "\74\250\1\253\1\250\1\253\1\251\1\0\74\250\1\102"+
    "\1\250\1\102\1\251\1\0\73\250\4\u0113\1\103\1\0"+
    "\3\250\1\u0113\7\250\1\u0113\3\250\2\u0113\16\250\1\u0113"+
    "\1\250\1\u0113\2\250\2\u0113\22\250\1\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\1\5\1\u0114\21\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\1\5\1\165\21\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\1\5"+
    "\1\215\20\5\1\u0115\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\u0116\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\1\5\1\340\21\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\3\5"+
    "\1\344\2\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\2\5\1\u0117\20\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\5\5\1\172\15\5\10\0\10\115\1\0\73\115"+
    "\4\u0118\2\115\1\266\2\115\1\u0118\1\267\6\115\1\u0118"+
    "\3\115\2\u0118\16\115\1\u0118\1\115\1\u0118\2\115\2\u0118"+
    "\22\115\1\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\1\5\1\u0119\21\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\172\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\2\5\1\u011a\20\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\3\5\1\u011b\2\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\4\5\1\u011c\1\5\6\0\2\5"+
    "\1\u0105\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\u011d\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\1\5\1\u011e\1\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\1\147\2\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\4\5\1\147\1\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\1\5\1\172\1\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\1\u011f"+
    "\1\u0120\1\u0121\7\0\1\5\1\0\4\5\1\u0122\1\u0123"+
    "\6\0\3\5\1\0\20\5\1\u0124\2\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\u0125\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\3\5\1\u0126\2\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\1\u0127\2\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\4\5\1\u0128\1\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\1\u0129\2\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\3\5\1\u012a\2\5"+
    "\6\0\3\5\1\0\1\5\1\u012b\21\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\u012c\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\3\5"+
    "\1\147\1\u012d\16\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\5\5\1\u012e\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\6\5\1\u012f\14\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\5\5\1\276\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\1\5\1\u0130\21\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\u0131\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\1\5\1\u0132\4\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\3\5\1\147\17\5\11\0\6\5\2\0\1\76\1\5"+
    "\1\300\1\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\u0133\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\5\5"+
    "\1\300\6\0\3\5\1\0\23\5\11\0\1\5\1\u0134"+
    "\4\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\1\u0135\5\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\4\5\1\u0136"+
    "\16\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\3\5\1\u0137\2\5\6\0\3\5\1\0\23\5"+
    "\11\0\1\5\1\u0138\4\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\4\5"+
    "\1\u0139\1\u0123\6\0\3\5\1\0\23\5\11\0\1\5"+
    "\1\u013a\4\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\1\5\1\u013b\4\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\u012a\1\0\6\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\2\5\1\u013c\3\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\1\147\5\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\2\5\1\u013d\1\0\23\5\11\0\1\5\1\u013e\4\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\1\147\2\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\1\5\1\340\1\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\3\5"+
    "\1\147\17\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\1\5\1\147"+
    "\21\5\11\0\6\5\2\0\1\76\3\5\7\0\1\u013f"+
    "\1\0\6\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\1\u0140\2\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\4\5\1\u011c\1\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\u0141\1\0\6\5\6\0\2\5\1\u0142\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\1\5\1\u0143\1\5"+
    "\7\0\1\5\1\0\2\5\1\u0144\1\5\1\u0139\1\5"+
    "\6\0\3\5\1\0\4\5\1\u0145\16\5\11\0\6\5"+
    "\2\0\1\76\1\5\1\u0146\1\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\1\5\1\163\21\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\6\5\1\u0147\14\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\4\5\1\272\1\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\u0148\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\u0149\1\0\1\5"+
    "\1\u014a\4\5\6\0\3\5\1\0\1\u014b\22\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\4\5"+
    "\1\u014c\1\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\2\5\1\u014d\20\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\2\5\1\u014e\20\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\1\u014f\4\5\1\u0150\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\6\5"+
    "\1\u0151\14\5\11\0\6\5\2\0\1\76\1\u0152\2\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\1\5\1\u0153\21\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\2\5\1\u0154\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\u0155\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\2\5\1\u0156\3\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\1\5\1\u0157\1\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\1\u0158\2\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\4\5\1\u0159"+
    "\1\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\2\5"+
    "\1\u015a\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\u015b\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\4\5\1\u0102\1\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\2\5\1\u015c\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\6\5\1\u0102\14\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\2\5\1\u015d"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\5\5\1\107\6\0\3\5\1\0\23\5"+
    "\11\0\1\5\1\u015e\4\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\1\5\1\u015f\4\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\5\5\1\147\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\1\u0160\2\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\1\5\1\156\4\5"+
    "\6\0\3\5\1\0\23\5\55\0\1\u0161\57\0\1\u010a"+
    "\117\0\1\u0162\60\0\1\u0163\122\0\1\u0164\57\0\1\u010e"+
    "\117\0\1\u0165\60\0\1\u0166\60\0\4\u0167\5\0\1\u0167"+
    "\7\0\1\u0167\3\0\2\u0167\16\0\1\u0167\1\0\1\u0167"+
    "\2\0\2\u0167\22\0\3\250\4\u0168\1\103\1\0\3\250"+
    "\1\u0168\7\250\1\u0168\3\250\2\u0168\16\250\1\u0168\1\250"+
    "\1\u0168\2\250\2\u0168\22\250\1\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\16\5\1\147\4\5\11\0\6\5\2\0\1\76\1\107"+
    "\2\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\1\5\1\u0169\4\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\3\5\1\172\17\5\10\0"+
    "\3\115\4\u016a\2\115\1\266\2\115\1\u016a\1\267\6\115"+
    "\1\u016a\3\115\2\u016a\16\115\1\u016a\1\115\1\u016a\2\115"+
    "\2\u016a\22\115\1\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\4\5\1\107"+
    "\16\5\11\0\6\5\2\0\1\76\1\u016b\2\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\1\5\1\222\1\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\1\u016c\2\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\5\5\1\u016d\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\1\5\1\u016e\4\5\6\0\1\5\1\u016f"+
    "\1\5\1\0\23\5\11\0\6\5\2\0\1\76\1\u0170"+
    "\2\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\1\5\1\u0171\21\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\1\5\1\u0172\21\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\1\u0173"+
    "\5\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\5\5\1\u0174\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\1\5"+
    "\1\u0175\1\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\6\5\1\u0176"+
    "\14\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\1\5\1\215\4\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\3\5\1\u0129\2\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\2\5\1\107\20\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\1\5\1\147\1\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\21\5\1\107\1\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\1\5\1\u0105\4\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\1\5"+
    "\1\u0177\21\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\u0178\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\1\5\1\u0179\4\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\1\5\1\147"+
    "\4\5\6\0\3\5\1\0\23\5\11\0\1\5\1\u017a"+
    "\4\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\1\5\1\u017b\1\5\7\0\1\u017c\1\0\4\5\1\u017d"+
    "\1\5\6\0\3\5\1\0\3\5\1\u017e\17\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\1\5"+
    "\1\u017f\4\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\u0180\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\1\5\1\u0181\4\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\222\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\4\5"+
    "\1\172\1\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\u0182\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\2\5\1\u0183\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\4\5\1\u0184\16\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\1\u0185\5\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\2\5\1\u0186"+
    "\3\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\1\5"+
    "\1\u0187\1\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\3\5\1\u0188\15\5\1\u0189\1\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\1\5\1\u018a\4\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\1\u018b\5\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\16\5\1\u018c"+
    "\4\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\2\5\1\u0160\20\5"+
    "\11\0\6\5\2\0\1\76\1\207\2\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\1\u018d\2\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\u018e\1\0\6\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\1\u018f\5\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\3\5"+
    "\1\u0190\2\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\1\5\1\u0191\1\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\16\5\1\u0192\4\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\165\1\0\6\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\1\5\1\u0193\4\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\2\5\1\u0194\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\1\172\2\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\3\5\1\u0195\17\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\3\5\1\u0196\2\5\6\0\2\5"+
    "\1\u0197\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\1\u0198\5\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\1\5\1\u0199\21\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\12\5\1\147\10\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\3\5\1\304\17\5\11\0\6\5"+
    "\2\0\1\76\1\5\1\272\1\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\1\5\1\u019a"+
    "\4\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\u019b\1\0\6\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\4\5\1\u019c\1\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\4\5\1\u019d\1\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\u019e\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\6\5\1\u019f\14\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\12\5"+
    "\1\u015c\10\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\u01a0\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\1\5\1\u01a1\1\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\1\u01a2\2\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\6\5\1\u01a3\14\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\1\u01a4\5\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\142\1\0\6\5\6\0\3\5\1\0"+
    "\23\5\31\0\1\u01a5\112\0\1\u010a\11\0\1\u0161\34\0"+
    "\1\u0163\1\u01a6\4\u0163\1\u01a6\2\0\3\u0163\2\0\1\u01a6"+
    "\1\0\1\u0163\2\u01a6\1\u0163\1\u01a6\6\u0163\1\0\5\u01a6"+
    "\3\u0163\1\u01a6\23\u0163\1\0\2\u01a6\1\0\1\u01a6\24\0"+
    "\1\u01a7\112\0\1\u010e\11\0\1\u0164\34\0\1\u0166\1\u01a8"+
    "\4\u0166\1\u01a8\2\0\3\u0166\2\0\1\u01a8\1\0\1\u0166"+
    "\2\u01a8\1\u0166\1\u01a8\6\u0166\1\0\5\u01a8\3\u0166\1\u01a8"+
    "\23\u0166\1\0\2\u01a8\1\0\1\u01a8\6\0\4\u01a9\5\0"+
    "\1\u01a9\7\0\1\u01a9\3\0\2\u01a9\16\0\1\u01a9\1\0"+
    "\1\u01a9\2\0\2\u01a9\22\0\3\250\4\u01aa\1\103\1\0"+
    "\3\250\1\u01aa\7\250\1\u01aa\3\250\2\u01aa\16\250\1\u01aa"+
    "\1\250\1\u01aa\2\250\2\u01aa\22\250\1\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\2\5"+
    "\1\u01ab\1\0\23\5\10\0\3\115\4\u01ac\2\115\1\266"+
    "\2\115\1\u01ac\1\267\6\115\1\u01ac\3\115\2\u01ac\16\115"+
    "\1\u01ac\1\115\1\u01ac\2\115\2\u01ac\22\115\1\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\1\107\5\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\4\5\1\u01ad\16\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\1\5\1\u01ae\1\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\2\5\1\147\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\1\5\1\u01af\1\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\6\5\1\u01b0\14\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\1\5\1\u01b1\21\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\1\u01af\22\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\1\5\1\u014c\4\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\1\5\1\215"+
    "\21\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\2\5\1\u01b2\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\u01b3\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\6\5\1\u01b4\14\5\11\0\1\5\1\u01b5\4\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\1\u01b6\2\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\20\5"+
    "\1\u0124\2\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\1\5\1\u014a\4\5\6\0\3\5\1\0"+
    "\1\u014b\22\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\u01b7\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\3\5"+
    "\1\u01b8\2\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\2\5\1\u01b9\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\206\1\0\6\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\1\172\5\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\1\5\1\u01ba\1\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\2\5\1\u01bb\1\u017e\17\5\11\0\6\5"+
    "\2\0\1\76\1\5\1\u01bc\1\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\5\5\1\340\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\u01bd\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\5\5\1\u01be\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\4\5\1\107"+
    "\1\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\1\u01bf\5\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\u01c0\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\3\5\1\u01c1\2\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\1\u01c2"+
    "\5\5\6\0\3\5\1\0\23\5\11\0\1\5\1\u01c3"+
    "\4\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\1\5\1\u01c4\4\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\1\5"+
    "\1\u01c5\1\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\2\5\1\u01c6\3\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\2\5\1\u01c7\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\2\5\1\u01c8\20\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\21\5\1\147\1\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\2\5"+
    "\1\u01c9\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\2\5\1\u016b\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\1\5\1\u0152\1\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\1\5\1\u01ca\4\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\2\5\1\u01cb\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\1\5\1\u0115\1\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\3\5\1\u01cc\2\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\1\5"+
    "\1\u01cd\1\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\2\5\1\u01ce\1\0\6\5"+
    "\1\142\14\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\1\5\1\u01cf\4\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\3\5\1\156\2\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\u01d0\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\3\5\1\u01d1\2\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\3\5\1\u0100\2\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\1\5\1\u0102\4\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\12\5\1\u0102"+
    "\10\5\11\0\6\5\2\0\1\76\1\5\1\u01d2\1\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\1\5\1\u01d3\21\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\5\5\1\u01d4\15\5\31\0\1\u0163"+
    "\100\0\1\u0166\62\0\4\5\5\0\1\5\7\0\1\5"+
    "\3\0\2\5\16\0\1\5\1\0\1\5\2\0\2\5"+
    "\22\0\3\250\4\102\1\103\1\0\3\250\1\102\7\250"+
    "\1\102\3\250\2\102\16\250\1\102\1\250\1\102\2\250"+
    "\2\102\22\250\1\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\2\5\1\u01d5"+
    "\20\5\10\0\3\115\4\15\2\115\1\266\2\115\1\15"+
    "\1\267\6\115\1\15\3\115\2\15\16\115\1\15\1\115"+
    "\1\15\2\115\2\15\22\115\1\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\u01cd\1\0\6\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\1\5\1\u0105\21\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\u0130\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\2\5\1\u01af\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\4\5\1\u01d6\1\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\17\5\1\107"+
    "\3\5\11\0\1\5\1\u01d7\4\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\1\5\1\u01d8\4\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\u01d9\1\0\6\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\1\5\1\u016e\4\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\16\5"+
    "\1\340\4\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\2\5\1\u01da"+
    "\20\5\11\0\6\5\2\0\1\76\1\5\1\u0160\1\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\1\u01db\5\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\1\5\1\u01dc\21\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\1\u0109\5\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\2\5\1\u01dd\3\5\6\0\3\5"+
    "\1\0\23\5\11\0\1\5\1\u01de\4\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\23\5\11\0\1\5\1\u01df\4\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\5\5\1\u01e0\15\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\4\5"+
    "\1\u0115\1\5\6\0\3\5\1\0\23\5\11\0\1\5"+
    "\1\u01e1\4\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\2\5\1\u01e2\3\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\1\5\1\u01e3\21\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\2\5"+
    "\1\u01e4\20\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\2\5\1\u01e5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\1\156\5\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\1\5\1\345"+
    "\4\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\5\5\1\u01e6\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\3\5\1\u01e7\1\5\1\u01e8\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\1\5"+
    "\1\142\1\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\1\5\1\u01e6"+
    "\1\5\7\0\1\5\1\0\6\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\5\5\1\345\6\0\3\5\1\0\23\5\11\0"+
    "\1\5\1\u01e9\4\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\1\5\1\u0102\1\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\6\5\1\u01a3\14\5\11\0\6\5\2\0\1\76"+
    "\1\343\2\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\1\5\1\107\1\5\1\0"+
    "\23\5\11\0\1\5\1\u01ea\4\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\u01eb\1\0"+
    "\6\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\3\5\1\u017e\17\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\5\5\1\u0123\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\1\5\1\u01ec\4\5\6\0\3\5\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\1\5\1\u01ed\4\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\1\5\1\156\1\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\3\5"+
    "\1\u01ee\2\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\3\5\1\0\1\u01ef\22\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\1\5\1\u01f0\1\5\1\u01f1"+
    "\1\257\1\5\6\0\1\5\1\u01f2\1\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\3\5\1\340\2\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\1\5\1\u01f3\21\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\2\5\1\147"+
    "\3\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\1\u01f4\5\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\1\5"+
    "\1\u01f5\1\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\1\142\5\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\2\5\1\u01f6\3\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\3\5\1\0\5\5\1\u01f7\15\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\1\5\1\u01f8"+
    "\2\5\1\257\1\5\6\0\1\5\1\u01f2\1\u01f9\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\4\5\1\u01fa\16\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\3\5\1\215\2\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\1\5"+
    "\1\320\4\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\6\5\6\0"+
    "\2\5\1\u0160\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\1\u01fb\2\5\7\0\1\5\1\0\6\5\6\0\3\5"+
    "\1\0\23\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\2\5\1\u01fc\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\1\215\2\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\5\1\0\1\5\1\144"+
    "\4\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\3\5\1\u01fc\2\5"+
    "\6\0\3\5\1\0\23\5\11\0\6\5\2\0\1\76"+
    "\3\5\7\0\1\5\1\0\1\5\1\152\4\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\2\5\1\u0174\1\0"+
    "\23\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\1\u01af\5\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\1\5\1\u01fd\1\5\7\0\1\5"+
    "\1\0\6\5\6\0\3\5\1\0\23\5\11\0\6\5"+
    "\2\0\1\76\3\5\7\0\1\u01fe\1\0\6\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\6\5"+
    "\1\175\14\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\2\5\1\u01ff\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\4\5\1\340\1\5\6\0\3\5\1\0\23\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\1\u01da"+
    "\5\5\6\0\3\5\1\0\23\5\11\0\6\5\2\0"+
    "\1\76\3\5\7\0\1\5\1\0\1\u0200\5\5\6\0"+
    "\3\5\1\0\23\5\11\0\6\5\2\0\1\76\3\5"+
    "\7\0\1\5\1\0\6\5\6\0\3\5\1\0\6\5"+
    "\1\u0201\14\5\11\0\6\5\2\0\1\76\3\5\7\0"+
    "\1\5\1\0\6\5\6\0\3\5\1\0\12\5\1\u0202"+
    "\10\5\11\0\6\5\2\0\1\76\3\5\7\0\1\5"+
    "\1\0\3\5\1\u0114\2\5\6\0\3\5\1\0\23\5"+
    "\11\0\6\5\2\0\1\76\3\5\7\0\1\5\1\0"+
    "\6\5\6\0\3\5\1\0\1\5\1\u012b\21\5\11\0"+
    "\6\5\2\0\1\76\3\5\7\0\1\5\1\0\6\5"+
    "\6\0\2\5\1\u01e6\1\0\23\5\10\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[31590];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\3\0\1\11\3\1\2\11\16\1\1\11\25\1\1\11"+
    "\5\1\1\11\5\1\1\11\3\1\1\0\1\1\1\0"+
    "\2\1\1\11\1\0\12\1\3\11\112\1\1\11\11\0"+
    "\1\1\1\0\1\1\1\11\15\1\1\11\122\1\11\0"+
    "\116\1\2\0\1\1\2\0\1\1\1\0\75\1\5\0"+
    "\131\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[514];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /* user code: */


	/**
	 * Constructor.  This must be here because JFlex does not generate a
	 * no-parameter constructor.
	 */
	public QDLSyntax() {
	}


	/**
	 * Adds the token specified to the current linked list of tokens.
	 *
	 * @param tokenType The token's type.
	 * @see #addToken(int, int, int)
	 */
	private void addHyperlinkToken(int start, int end, int tokenType) {
		int so = start + offsetShift;
		addToken(zzBuffer, start,end, tokenType, so, true);
	}


	/**
	 * Adds the token specified to the current linked list of tokens.
	 *
	 * @param tokenType The token's type.
	 */
	private void addToken(int tokenType) {
		addToken(zzStartRead, zzMarkedPos-1, tokenType);
	}


	/**
	 * Adds the token specified to the current linked list of tokens.
	 *
	 * @param tokenType The token's type.
	 * @see #addHyperlinkToken(int, int, int)
	 */
	private void addToken(int start, int end, int tokenType) {
		int so = start + offsetShift;
		addToken(zzBuffer, start,end, tokenType, so, false);
	}


	/**
	 * Adds the token specified to the current linked list of tokens.
	 *
	 * @param array The character array.
	 * @param start The starting offset in the array.
	 * @param end The ending offset in the array.
	 * @param tokenType The token's type.
	 * @param startOffset The offset in the document at which this token
	 *        occurs.
	 * @param hyperlink Whether this token is a hyperlink.
	 */
	public void addToken(char[] array, int start, int end, int tokenType,
						int startOffset, boolean hyperlink) {
		super.addToken(array, start,end, tokenType, startOffset, hyperlink);
		zzStartRead = zzMarkedPos;
	}


	/**
	 * {@inheritDoc}
	 */
	public String[] getLineCommentStartAndEnd(int languageIndex) {
		return new String[] { "//", null };
	}


	/**
	 * Returns the first token in the linked list of tokens generated
	 * from <code>text</code>.  This method must be implemented by
	 * subclasses so they can correctly implement syntax highlighting.
	 *
	 * @param text The text from which to get tokens.
	 * @param initialTokenType The token type we should start with.
	 * @param startOffset The offset into the document at which
	 *        <code>text</code> starts.
	 * @return The first <code>Token</code> in a linked list representing
	 *         the syntax highlighted text.
	 */
	public Token getTokenList(Segment text, int initialTokenType, int startOffset) {

		resetTokenList();
		this.offsetShift = -text.offset + startOffset;

		// Start off in the proper state.
		int state = Token.NULL;
		switch (initialTokenType) {
						case Token.COMMENT_MULTILINE:
				state = MLC;
				start = text.offset;
				break;

			/* No documentation comments */
			default:
				state = Token.NULL;
		}

		s = text;
		try {
			yyreset(zzReader);
			yybegin(state);
			return yylex();
		} catch (IOException ioe) {
			ioe.printStackTrace();
			return new TokenImpl();
		}

	}


	/**
	 * Refills the input buffer.
	 *
	 * @return      <code>true</code> if EOF was reached, otherwise
	 *              <code>false</code>.
	 */
	private boolean zzRefill() {
		return zzCurrentPos>=s.offset+s.count;
	}


	/**
	 * Resets the scanner to read from a new input stream.
	 * Does not close the old reader.
	 *
	 * All internal variables are reset, the old input stream 
	 * <b>cannot</b> be reused (internal buffer is discarded and lost).
	 * Lexical state is set to <tt>YY_INITIAL</tt>.
	 *
	 * @param reader   the new input stream 
	 */
	public final void yyreset(Reader reader) {
		// 's' has been updated.
		zzBuffer = s.array;
		/*
		 * We replaced the line below with the two below it because zzRefill
		 * no longer "refills" the buffer (since the way we do it, it's always
		 * "full" the first time through, since it points to the segment's
		 * array).  So, we assign zzEndRead here.
		 */
		//zzStartRead = zzEndRead = s.offset;
		zzStartRead = s.offset;
		zzEndRead = zzStartRead + s.count - 1;
		zzCurrentPos = zzMarkedPos = zzPushbackPos = s.offset;
		zzLexicalState = YYINITIAL;
		zzReader = reader;
		zzAtBOL  = true;
		zzAtEOF  = false;
	}




  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public QDLSyntax(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public QDLSyntax(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 308) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public org.fife.ui.rsyntaxtextarea.Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = zzLexicalState;


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 4: 
          { addNullToken(); return firstToken;
          }
        case 27: break;
        case 21: 
          { addToken(Token.LITERAL_CHAR);
          }
        case 28: break;
        case 17: 
          { start = zzMarkedPos-2; yybegin(MLC);
          }
        case 29: break;
        case 8: 
          { addToken(Token.WHITESPACE);
          }
        case 30: break;
        case 22: 
          { addToken(Token.ERROR_STRING_DOUBLE);
          }
        case 31: break;
        case 18: 
          { addToken(Token.LITERAL_NUMBER_FLOAT);
          }
        case 32: break;
        case 19: 
          { addToken(Token.RESERVED_WORD);
          }
        case 33: break;
        case 9: 
          { addToken(Token.SEPARATOR);
          }
        case 34: break;
        case 1: 
          { addToken(Token.IDENTIFIER);
          }
        case 35: break;
        case 12: 
          { addToken(start,zzStartRead-1, Token.COMMENT_EOL); addNullToken(); return firstToken;
          }
        case 36: break;
        case 16: 
          { start = zzMarkedPos-2; yybegin(EOL_COMMENT);
          }
        case 37: break;
        case 3: 
          { addToken(Token.ERROR_CHAR); addNullToken(); return firstToken;
          }
        case 38: break;
        case 6: 
          { addToken(Token.FUNCTION);
          }
        case 39: break;
        case 7: 
          { addToken(Token.ERROR_STRING_DOUBLE); addNullToken(); return firstToken;
          }
        case 40: break;
        case 23: 
          { addToken(Token.DATA_TYPE);
          }
        case 41: break;
        case 20: 
          { yybegin(YYINITIAL); addToken(start,zzStartRead+2-1, Token.COMMENT_MULTILINE);
          }
        case 42: break;
        case 14: 
          { addToken(Token.ERROR_CHAR);
          }
        case 43: break;
        case 24: 
          { addToken(Token.LITERAL_BOOLEAN);
          }
        case 44: break;
        case 15: 
          { addToken(Token.LITERAL_STRING_DOUBLE_QUOTE);
          }
        case 45: break;
        case 26: 
          { int temp=zzStartRead; addToken(start,zzStartRead-1, Token.COMMENT_EOL); addHyperlinkToken(temp,zzMarkedPos-1, Token.COMMENT_EOL); start = zzMarkedPos;
          }
        case 46: break;
        case 25: 
          { int temp=zzStartRead; addToken(start,zzStartRead-1, Token.COMMENT_MULTILINE); addHyperlinkToken(temp,zzMarkedPos-1, Token.COMMENT_MULTILINE); start = zzMarkedPos;
          }
        case 47: break;
        case 13: 
          { addToken(Token.ERROR_NUMBER_FORMAT);
          }
        case 48: break;
        case 2: 
          { addToken(Token.LITERAL_NUMBER_DECIMAL_INT);
          }
        case 49: break;
        case 5: 
          { addToken(Token.OPERATOR);
          }
        case 50: break;
        case 10: 
          { 
          }
        case 51: break;
        case 11: 
          { addToken(start,zzStartRead-1, Token.COMMENT_MULTILINE); return firstToken;
          }
        case 52: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            switch (zzLexicalState) {
            case EOL_COMMENT: {
              addToken(start,zzStartRead-1, Token.COMMENT_EOL); addNullToken(); return firstToken;
            }
            case 515: break;
            case YYINITIAL: {
              addNullToken(); return firstToken;
            }
            case 516: break;
            case MLC: {
              addToken(start,zzStartRead-1, Token.COMMENT_MULTILINE); return firstToken;
            }
            case 517: break;
            default:
            return null;
            }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
