/*
    Boiler plate from Robin Blairs script that located a module bug. Since this requires
    a lot of interacting scopes to find, this is just taken in toto.

    It gets some pages from a public source (CILogon in this case) in a loop.
*/
debugger(10);

define[
    assemble_team_associations(CouPersonRoles.) // CouPersonRole[]{} objects
  ]body[
    out. := [];
    while[ for_keys(j, CouPersonRoles.) ]
      do [
        new_team. := {};
        if [
          CouPersonRoles.j.'cou_id' != 'null'
        ][ // is a valid cou to look up
          new_team. := {
            'member_role': CouPersonRoles.j.'affiliation',
            'team_id': resolve_cou_name(CouPersonRoles.j.'cou_id')
          };
          out.j. := new_team.;
        ];
    ]; //end while
    return(out.);
  ];

 CouPersonRoles. ≔ [{'affiliation':'aff_0', 'cou_id':''},
                    {'affiliation':'aff_1', 'cou_id':'fermilab'},
                    {'affiliation':'aff_2', 'cou_id':'jlab'},
                    {'affiliation':'aff_3', 'cou_id':'ligo'}];
test_roles. := ['','/fermilab','/jlab','/ligo']; // for verification later
 define[
    resolve_cou_name(cou_id)
  ]body[
     cou_http_client := j_load('http');

    _registry_host := 'https://cilogon.org';
    cou_http_client#host(_registry_host);
    _username := 'api_user_name';
    _password := 'api_user_password';

    _my_credential := cou_http_client#credentials(_username, _password);

    _my_headers.'Authorization' := 'Basic' + ' ' + _my_credential;
    _my_headers.'Content-Type'  := 'application/json';
    cou_http_client#headers(_my_headers.);
    cou_http_client#open();
    cou_url_path := '/.well-known/openid-configuration/' + to_string(cou_id) ;
    cou_query_params. := [];

    // query for cou_id in COUs
    cou_response. := cou_http_client#get(cou_url_path, cou_query_params.);
    cou_response_code := cou_response.'status'.'code';
    // clean up
    cou_http_client#close();
    debugger(1, 'server response content:\n' + print(cou_response.'content'));
    // return the issuer, since it is unique and shows the call worked
    return(cou_response.'content'.'issuer');
   ]; //end resolve_cou_name

r. := assemble_team_associations(CouPersonRoles.);
index := 0;
while[z. ∈ r.][
debugger(1, z.);
debugger(1,('https://cilogon.org' + (test_roles.index)));
debugger(1,('aff_' + (index)));
  ⊨ z.'team_id' == ('https://cilogon.org' + (test_roles.index)) : 'wrong team id of ' + 'https://cilogon.org' + (test_roles.index) ;
  ⊨ z.'member_role' == 'aff_' + (index++) : 'wrong member role';
]; //end while

return(true);